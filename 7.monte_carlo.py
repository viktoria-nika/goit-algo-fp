# Завдання 7. Використання методу Монте-Карло

# Необхідно написати програму на Python, яка імітує велику кількість кидків кубиків, 
# обчислює суми чисел, які випадають на кубиках, і визначає ймовірність кожної можливої суми.
#Створіть симуляцію, де два кубики кидаються велику кількість разів. 
# Для кожного кидка визначте суму чисел, які випали на обох кубиках. 
# Підрахуйте, скільки разів кожна можлива сума (від 2 до 12) з’являється у процесі симуляції. 
# Використовуючи ці дані, обчисліть імовірність кожної суми.
# На основі проведених імітацій створіть таблицю або графік, який відображає ймовірності кожної суми, 
# виявлені за допомогою методу Монте-Карло.

# Розв'язок:

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

# Створюємо функцію, яка імітує кидки двух кубиків задану кількість разів, 
# генеруючи випадкові результати для кожного кубика.
def monte_carlo_dice_simulation(num_rolls):
    # Імітація кидків двох кубиків
    die1 = np.random.randint(1, 7, num_rolls)
    die2 = np.random.randint(1, 7, num_rolls)
    # Обчислює суму значень, які випали на обох кубиках. 
    sums = die1 + die2 

    # Використовуємо `np.bincount` для підрахунку, скільки разів з'явилася кожна можлива сума (від 2 до 12)
    sum_counts = np.bincount(sums)[2:13] 

    # Обчислюємо ймовірності кожної суми, ділячи кількість появ на загальну кількість кидків
    probabilities = sum_counts / num_rolls

    return probabilities, sum_counts

# Викликаємо симуляцію з 1 мільйоном кидків
def main():
    num_rolls = 1000000  # Кількість кидків
    probabilities, sum_counts = monte_carlo_dice_simulation(num_rolls)

    # Вивід ймовірностей
    sums = np.arange(2, 13)
    print("Суми:", sums)
    print("Ймовірності (Метод Монте-Карло):", probabilities)

    # Графік ймовірностей
    plt.bar(sums, probabilities)
    plt.xlabel('Сума')
    plt.ylabel('Ймовірність')
    plt.title('Ймовірності сум при киданні двох кубиків (Метод Монте-Карло)')
    plt.xticks(sums)
    plt.grid(axis='y')
    plt.show()

    # Аналітичні ймовірності для порівняння
    analytic_probabilities = np.array([1/36, 2/36, 3/36, 4/36, 5/36, 6/36, 
                                       5/36, 4/36, 3/36, 2/36, 1/36])

    # Вивід аналітичних ймовірностей
    print("Аналітичні ймовірності:", analytic_probabilities)

    # Порівняння
    comparison_df = pd.DataFrame({
        'Сума': sums,
        'Ймовірність (Метод Монте-Карло)': probabilities,
        'Аналітична ймовірність': analytic_probabilities
    })

    print("\nПорівняння ймовірностей:")
    print(comparison_df)

if __name__ == "__main__":
    main()